package com.tutorial.cloudinaryrest.controller;
import com.tutorial.cloudinaryrest.service.ServiceFile;
import com.tutorial.cloudinaryrest.dto.Mensaje;
import com.tutorial.cloudinaryrest.entity.Imagen;
import com.tutorial.cloudinaryrest.service.CloudinaryService;
import com.tutorial.cloudinaryrest.service.ImagenService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/products")
@CrossOrigin
public class MainController {
	String subPath = "products";

    @Autowired
    CloudinaryService cloudinaryService;

    @Autowired
    ImagenService imagenService;
    
	@Autowired
	ServiceFile serviceFile;
	
    @GetMapping("/list")
    public ResponseEntity<List<Imagen>> list(){
        List<Imagen> list = imagenService.list();
        return new ResponseEntity(list, HttpStatus.OK);
    }

    @GetMapping("/aa")
	public ResponseEntity<String> aaa() {

		return ResponseEntity.ok(System.getProperty("user.dir") + "src\\main\\resources\\static\\images\\");
	}
    @PostMapping("/upload")
    public ResponseEntity<?> upload(@RequestParam(name = "image",required = false) MultipartFile file, 
			@RequestParam("name") String name,
			@RequestParam("description") String description ) {
    	
        String imageName = "product.jpg";
        if (file != null) {
			imageName = serviceFile.saveFile(file, this.subPath);
		}

		Imagen imagen = new Imagen();
		imagen.setName(imageName);
		imagen.setDescription(description);
		imagen.setImage(imageName);
		imagenService.save(imagen);
		
        return new ResponseEntity(new Mensaje("imagen subida"), HttpStatus.OK);
    }

    @DeleteMapping("/delete/{id}")
    public ResponseEntity<?> delete(@PathVariable("id") int id)throws IOException {
        if(!imagenService.exists(id))
            return new ResponseEntity(new Mensaje("no existe"), HttpStatus.NOT_FOUND);
        Imagen imagen = imagenService.getOne(id).get();
        //Map result = cloudinaryService.delete(imagen.getImage());
        imagenService.delete(id);
        return new ResponseEntity(new Mensaje("imagen eliminada"), HttpStatus.OK);
    }
}
